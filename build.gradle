buildscript {
    ext.kotlin_version = '1.1.1'
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
        classpath 'gradle.plugin.de.fuerstenau:BuildConfigPlugin:1.1.8'
    }
}

apply plugin: 'kotlin'
apply plugin: 'java'
apply plugin: "kotlin-allopen"
apply plugin: 'idea'
apply plugin: 'de.fuerstenau.buildconfig'
apply from: "http://dl.bintray.com/content/shemnon/javafx-gradle/8.1.1/javafx.plugin"
//apply plugin: 'application'
group 'ru.lionzxy.tplauncher'
version '1.0-SNAPSHOT'

version = "1.2." + getTime()
sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven { url 'https://jcenter.bintray.com/' }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation 'com.github.LionZXY:mclauncher-api:d4d12dc77e'
    implementation "no.tornado:tornadofx:1.7.17"
    implementation 'de.codecentric.centerdevice:javafxsvg:1.3.0'
    implementation 'com.github.LionZXY:oslib:master-SNAPSHOT'
    implementation "org.rauschig:jarchivelib:1.0.0"
    implementation "net.minidev:json-smart:1.1.1"
    implementation 'io.sentry:sentry:1.7.5'
    implementation "commons-codec:commons-codec:1.12"
    implementation 'org.zeroturnaround:zt-zip:1.14'
    //implementation 'org.bitbucket.shemnon.javafxplugin:gradle-javafx-plugin:8.1.1'


    testCompile group: 'junit', name: 'junit', version: '4.12'
}

sourceSets {
    main.kotlin.srcDirs += 'src/main/kotlin'
    main.java.srcDirs += 'src/main/kotlin'
}

buildConfig {
    appName = project.name
    version = project.version

    clsName = 'BuildConfig'      // sets the name of the BuildConfig class
    packageName = project.group  // sets the package of the BuildConfig class,
    // 'de.fuerstenau.buildconfig' if project.group is not set
    charset = 'UTF-8'            // sets charset of the generated class,
}

javafx {
    mainClass 'ru.lionzxy.tplauncher.MainApplication'
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'launcher',
                'Implementation-Version': version,
                'Main-Class': 'ru.lionzxy.tplauncher.MainKt'
    }
    baseName = project.name
    from {
        configurations.runtimeClasspath.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    with jar
}

static def getTime() {
    return new Date().format('MMddHHmm')
}
